name: Deploy to GitHub Pages

on:
  push:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: apps
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: apps/package-lock.json
      - run: npm ci
      - run: npm test
      - name: Build (relative base)
        run: npm run build
        env:
          BASE_PATH: ./
      - name: Upload dist artifact
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: apps/dist

  deploy:
    runs-on: ubuntu-latest
    needs: build
    strategy:
      matrix:
        game_slug: ["daadi"] # add more slugs here
    env:
      GAME_COLLECTION: _games
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: dist
          path: apps/dist
      - name: Derive version short SHA
        run: echo "VERSION_SHORT=${GITHUB_SHA::7}" >> $GITHUB_ENV
      - name: Deploy versioned
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: apps/dist
          destination_dir: ${{ env.GAME_COLLECTION }}/${{ matrix.game_slug }}/${{ env.VERSION_SHORT }}
          keep_files: true
      - name: Deploy latest alias
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: apps/dist
          destination_dir: ${{ env.GAME_COLLECTION }}/${{ matrix.game_slug }}/latest
          keep_files: true

  publish-manifest:
    runs-on: ubuntu-latest
    needs: deploy
    env:
      GAME_COLLECTION: _games
      SITE_BASE: /lazyspa
    steps:
      - name: Checkout gh-pages
        uses: actions/checkout@v4
        with:
          ref: gh-pages
      - name: Derive version short SHA
        run: echo "VERSION_SHORT=${GITHUB_SHA::7}" >> $GITHUB_ENV
      - name: Generate games.json (auto-discover)
        run: |
          mkdir -p __gh_manifest
          slugs=$(ls -1d ${GAME_COLLECTION}/* 2>/dev/null | xargs -n1 basename | sort || true)
          echo '{' > __gh_manifest/games.json
          echo '  "commit": "'${GITHUB_SHA}'",' >> __gh_manifest/games.json
          echo '  "versionShort": "'${VERSION_SHORT}'",' >> __gh_manifest/games.json
          echo '  "collection": "'${GAME_COLLECTION}'",' >> __gh_manifest/games.json
          echo '  "games": [' >> __gh_manifest/games.json
          first=1
          for slug in $slugs; do
            latest_url="${SITE_BASE}/${GAME_COLLECTION}/${slug}/latest/"
            # gather versions (exclude 'latest'), and sort by commit time desc
            tmpfile=$(mktemp)
            for v in $(ls -1 ${GAME_COLLECTION}/${slug} 2>/dev/null | grep -v '^latest$' || true); do
              ts=$(git log -1 --format=%ct -- "${GAME_COLLECTION}/${slug}/${v}" 2>/dev/null || echo '')
              if [ -z "$ts" ]; then ts=$(date +%s); fi
              echo "$ts $v" >> "$tmpfile"
            done
            versions=$(sort -rn "$tmpfile" | awk '{print $2}')
            rm -f "$tmpfile"
            [ $first -eq 0 ] && echo ',' >> __gh_manifest/games.json
            echo '    {' >> __gh_manifest/games.json
            echo '      "slug": "'${slug}'",' >> __gh_manifest/games.json
            echo '      "latest": "'${latest_url}'",' >> __gh_manifest/games.json
            echo '      "versions": [' >> __gh_manifest/games.json
            vfirst=1
            for v in $versions; do
              ts=$(git log -1 --format=%ct -- "${GAME_COLLECTION}/${slug}/${v}" 2>/dev/null || echo '')
              if [ -z "$ts" ]; then ts=$(date +%s); fi
              iso=$(date -u -d @${ts} +%FT%TZ 2>/dev/null || date -u -r ${ts} +%FT%TZ)
              [ $vfirst -eq 0 ] && echo ',' >> __gh_manifest/games.json
              echo '        {"id":"'${v}'","url":"'${SITE_BASE}'/'${GAME_COLLECTION}'/'${slug}'/'${v}'/","ts":'${ts}',"date":"'${iso}'"}' >> __gh_manifest/games.json
              vfirst=0
            done
            echo '      ]' >> __gh_manifest/games.json
            echo '    }' >> __gh_manifest/games.json
            first=0
          done
          echo '  ]' >> __gh_manifest/games.json
          echo '}' >> __gh_manifest/games.json
      - name: Publish games.json
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: __gh_manifest
          keep_files: true
  # Root index is now a tracked file on gh-pages, not generated by CI.
